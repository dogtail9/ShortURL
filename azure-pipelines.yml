# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- feature/*

resources:
- repo: self

variables:
  system.debug: true

stages:
- stage: Build_And_Push_Docker_Images
  displayName: Build And Push Docker Images
  jobs:  
  - job: Cache
    dependsOn: []
    displayName: Build And Push Cache
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DotNetCoreInstaller@0
      displayName: 'Use .NET Core sdk 3.1.101'
      inputs:
        version: 3.1.101
    - pwsh: |
        dotnet tool install --global dotnet-sql-cache --version 3.1.1
      displayName: Install dotnet-sql-cache 
    - pwsh: |
        docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=P@ssw0rd' -p 1435:1433 -d --name shorturlcache mcr.microsoft.com/mssql/server:2019-GDR1-ubuntu-16.04
        Start-Sleep -Seconds 20
        docker exec shorturlcache /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "P@ssw0rd" -Q "CREATE DATABASE ShortUrlCache"
        dotnet sql-cache create "Server=localhost,1435;Database=ShortUrlCache;User Id=sa;Password=P@ssw0rd;" dbo UrlCache
        docker stop shorturlcache
        docker commit shorturlcache dogtail9/shorturl:cache_$(Build.BuildNumber)
        docker rm shorturlcache
      displayName: Build cache 
      name: firstStep
      workingDirectory: $(build.sourcesDirectory)
      failOnStderr: false
    - task: Docker@2
      displayName: Push Cache
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: push
        tags: 'cache_$(Build.BuildNumber)'
        addPipelineData: false
  - job: IdentityServer
    dependsOn: []
    displayName: Build And Push IdentityServer
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build IdentityServer
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: build
        Dockerfile: ShortUrl.IdentityServer/Dockerfile
        buildContext: '$(Build.SourcesDirectory)'
        tags: 'identityserver_$(Build.BuildNumber)'
        addPipelineData: false
    - task: Docker@2
      displayName: Push IdentityServer
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: push
        tags: 'identityserver_$(Build.BuildNumber)'
        addPipelineData: false
  - job: ManagementGui
    dependsOn: []
    displayName: Build And Push ManagementGui
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build ManagementGui
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: build
        Dockerfile: ShortUrl.ManagementGui/Dockerfile
        buildContext: '$(Build.SourcesDirectory)'
        tags: 'managementgui_$(Build.BuildNumber)'
        addPipelineData: false
    - task: Docker@2
      displayName: Push ManagementGui
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: push
        tags: 'managementgui_$(Build.BuildNumber)'
        addPipelineData: false
  - job: RedirectApi
    dependsOn: []
    displayName: Build And Push RedirectApi
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build RedirectApi
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: build
        Dockerfile: ShortUrl.RedirectApi/Dockerfile
        buildContext: '$(Build.SourcesDirectory)'
        tags: 'redirectapi_$(Build.BuildNumber)'
        addPipelineData: false
    - task: Docker@2
      displayName: Push RedirectApi
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: push
        tags: 'redirectapi_$(Build.BuildNumber)'
        addPipelineData: false
  - job: ManagementApi
    dependsOn: []
    displayName: Build And Push ManagementApi
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build ManagementApi
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: build
        Dockerfile: ShortUrl.UrlManagementApi/Dockerfile
        buildContext: '$(Build.SourcesDirectory)'
        tags: 'managementapi_$(Build.BuildNumber)'
        addPipelineData: false
    - task: Docker@2
      displayName: Push ManagementApi
      inputs:
        containerRegistry: 'Docker Hub'
        repository: dogtail9/shorturl
        command: push
        tags: 'managementapi_$(Build.BuildNumber)'
        addPipelineData: false

- stage: Deploy
  displayName: Deploy Azure App Services
  dependsOn: Build_And_Push_Docker_Images
  condition: succeeded('Build_And_Push_Docker_Images')
  jobs:  
  - job: Delpoy
    displayName: Deploy ARM Template
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: echo "Hello world"